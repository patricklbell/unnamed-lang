; ModuleID = 'tests/basic'
source_filename = "tests/basic"

define float @fibonacci(float %x) {
entry:
  %x1 = alloca float, align 4
  store float %x, ptr %x1, align 4
  %0 = load float, ptr %x1, align 4
  %uletmp = fcmp ule float %0, 0.000000e+00
  br i1 %uletmp, label %if, label %ifcont

if:                                               ; preds = %entry
  ret float 0.000000e+00

ifcont:                                           ; preds = %entry
  %1 = load float, ptr %x1, align 4
  %ueqtmp = fcmp ueq float %1, 1.000000e+00
  br i1 %ueqtmp, label %if2, label %ifcont3

if2:                                              ; preds = %ifcont
  ret float 1.000000e+00

ifcont3:                                          ; preds = %ifcont
  %2 = load float, ptr %x1, align 4
  %subtmp = fsub float %2, 1.000000e+00
  %calltmp = call float @fibonacci(float %subtmp)
  %3 = load float, ptr %x1, align 4
  %subtmp4 = fsub float %3, 2.000000e+00
  %calltmp5 = call float @fibonacci(float %subtmp4)
  %addtmp = fadd float %calltmp, %calltmp5
  ret float %addtmp
}
